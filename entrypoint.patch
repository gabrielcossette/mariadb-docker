--- docker-entrypoint.sh	2018-04-10 22:49:48.928002315 -0400
+++ entrypoint_modif	2018-04-10 22:49:45.424099638 -0400
@@ -40,6 +40,11 @@
 	unset "$fileVar"
 }
 
+file_env 'MYSQL_ROOT_HOST' '%'
+file_env 'MYSQL_DATABASE'
+file_env 'MYSQL_USER'
+file_env 'MYSQL_PASSWORD'
+
 _check_config() {
 	toRun=( "$@" --verbose --help --log-bin-index="$(mktemp -u)" )
 	if ! errors="$("${toRun[@]}" 2>&1 >/dev/null)"; then
@@ -78,7 +83,6 @@
 	DATADIR="$(_get_config 'datadir' "$@")"
 
 	if [ ! -d "$DATADIR/mysql" ]; then
-		file_env 'MYSQL_ROOT_PASSWORD'
 		if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" -a -z "$MYSQL_RANDOM_ROOT_PASSWORD" ]; then
 			echo >&2 'error: database is uninitialized and password option is not specified '
 			echo >&2 '  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD'
@@ -121,7 +125,6 @@
 
 		rootCreate=
 		# default root to listen for connections from anywhere
-		file_env 'MYSQL_ROOT_HOST' '%'
 		if [ ! -z "$MYSQL_ROOT_HOST" -a "$MYSQL_ROOT_HOST" != 'localhost' ]; then
 			# no, we don't care if read finds a terminating character in this heredoc
 			# https://unix.stackexchange.com/questions/265149/why-is-set-o-errexit-breaking-this-read-heredoc-expression/265151#265151
@@ -148,19 +151,17 @@
 			mysql+=( -p"${MYSQL_ROOT_PASSWORD}" )
 		fi
 
-		file_env 'MYSQL_DATABASE'
+
 		if [ "$MYSQL_DATABASE" ]; then
 			echo "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DATABASE\` ;" | "${mysql[@]}"
 			mysql+=( "$MYSQL_DATABASE" )
 		fi
 
-		file_env 'MYSQL_USER'
-		file_env 'MYSQL_PASSWORD'
 		if [ "$MYSQL_USER" -a "$MYSQL_PASSWORD" ]; then
 			echo "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD' ;" | "${mysql[@]}"
 
 			if [ "$MYSQL_DATABASE" ]; then
-				echo "GRANT ALL ON \`$MYSQL_DATABASE\`.* TO '$MYSQL_USER'@'%' ;" | "${mysql[@]}"
+				echo "GRANT ALL ON *.* TO '$MYSQL_USER'@'%' WITH GRANT OPTION ;" | "${mysql[@]}"
 			fi
 
 			echo 'FLUSH PRIVILEGES ;' | "${mysql[@]}"
@@ -185,6 +186,18 @@
 		echo
 		echo 'MySQL init process done. Ready for start up.'
 		echo
+	
+	else
+
+    SOCKET="$(_get_config 'socket' "$@")"
+	"$@" --skip-networking --socket="${SOCKET}" &
+	pid="$!"
+	mysql=( mysql --protocol=socket -uroot -hlocalhost --socket="${SOCKET}" -p"${MYSQL_ROOT_PASSWORD}" )
+	
+	echo "ALTER USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD';" | "${mysql[@]}"
+	
+	echo 'FLUSH PRIVILEGES ;' | "${mysql[@]}"
+	
 	fi
 fi
 
